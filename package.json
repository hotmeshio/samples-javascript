{
  "name": "samples-javascript",
  "version": "0.2.1",
  "description": "HotMesh LifeCycle Sandbox",
  "scripts": {
    "clean": "rimraf ./build",
    "build": "tsc --build tsconfig.json",
    "clean-build": "npm run clean && npm run build",
    "ai:basic": "ts-node-dev --transpile-only --ignore-watch node_modules -- services/ai/gpt.test.ts",
    "demo:js:hotmesh": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=5000 node demos/js/hotmesh/index.js",
    "demo:js:meshflow": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=5000 node demos/js/meshflow/index.js",
    "demo:js:meshcall": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=500 node demos/js/meshcall/index.js",
    "demo:js:meshdata": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=5000 node demos/js/meshdata/index.js",
    "demo:ts:hotmesh": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=5000 ts-node demos/ts/hotmesh/index.ts",
    "demo:ts:meshflow": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=5000 ts-node demos/ts/meshflow/index.ts",
    "demo:ts:meshcall": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=500 ts-node demos/ts/meshcall/index.ts",
    "demo:ts:meshdata": "NODE_ENV=test HMSH_SCOUT_INTERVAL_SECONDS=2 HMSH_BLOCK_TIME_MS=5000 ts-node demos/ts/meshdata/index.ts",
    "docker:demo:js:hotmesh": "docker compose exec hotmesh-dashboard npm run demo:js:hotmesh",
    "docker:demo:js:meshflow": "docker compose exec hotmesh-dashboard npm run demo:js:meshflow",
    "docker:demo:js:meshcall": "docker compose exec hotmesh-dashboard npm run demo:js:meshcall",
    "docker:demo:js:meshdata": "docker compose exec hotmesh-dashboard npm run demo:js:meshdata",
    "docker:demo:ts:hotmesh": "docker compose exec hotmesh-dashboard npm run demo:ts:hotmesh",
    "docker:demo:ts:meshflow": "docker compose exec hotmesh-dashboard npm run demo:ts:meshflow",
    "docker:demo:ts:meshcall": "docker compose exec hotmesh-dashboard npm run demo:ts:meshcall",
    "docker:demo:ts:meshdata": "docker compose exec hotmesh-dashboard npm run demo:ts:meshdata",
    "open:redis": "open http://localhost:8001",
    "open:dashboard": "open http://localhost:3010",
    "server": "HMSH_LOGLEVEL='info' HMSH_BLOCK_TIME_MS=180000 ts-node-dev --exit-child --respawn --transpile-only --ignore-watch node_modules --watch .env -- web/server.ts",
    "docker:up": "npm run _copy_env_example; npm run _docker:build:up",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:logs:dashboard": "docker compose logs -f dashboard",
    "docker:logs:redis": "docker compose logs -f redis",
    "docker:reset-redis": "docker compose down -v && npm run docker:up",
    "docker:clean-build": "docker compose exec dashboard npm run clean-build",
    "_docker:build:up": "docker compose watch",
    "_copy_env_example": "cp -n env.example .env"
  },
  "keywords": [
    "Redis",
    "ValKey",
    "DragonflyDB",
    "HotMesh",
    "Temporalio",
    "Durable Workflow",
    "Distributed Orchestration",
    "MeshData",
    "Middleware"
  ],
  "author": "luke.birdeau@gmail.com",
  "license": "Apache-2.0",
  "dependencies": {
    "@honeycombio/opentelemetry-node": "^0.7.2",
    "@hotmeshio/hotmesh": "^0.2.1",
    "@opentelemetry/auto-instrumentations-node": "^0.47.1",
    "@opentelemetry/sdk-node": "^0.52.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "express-winston": "^4.2.0",
    "moment": "^2.30.1",
    "morgan": "^1.10.0",
    "openai": "^4.29.2",
    "redis": "^4.6.10",
    "socket.io": "^4.7.4",
    "uuid": "^9.0.1",
    "winston": "^3.13.0"
  },
  "devDependencies": {
    "@types/jest": "^29.5.0",
    "@types/node": "^18.15.11",
    "@types/uuid": "^9.0.8",
    "@types/ws": "^8.5.4",
    "@typescript-eslint/eslint-plugin": "^5.58.0",
    "@typescript-eslint/parser": "^5.58.0",
    "eslint": "^8.38.0",
    "jest": "^29.5.0",
    "rimraf": "^4.4.1",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.0.4"
  }
}
